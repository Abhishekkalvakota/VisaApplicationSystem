// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VisaApplicationSysWeb.Data;

#nullable disable

namespace VisaApplicationSysWeb.Migrations
{
    [DbContext(typeof(VisaDBContext))]
    partial class VisaDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VisaApplicationSysWeb.Models.Applicant", b =>
                {
                    b.Property<int>("ApplicantID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApplicantID"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsVisaApplied")
                        .HasColumnType("bit");

                    b.Property<string>("VisaType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VisaTypeId")
                        .HasColumnType("int");

                    b.HasKey("ApplicantID");

                    b.ToTable("tblApplicant");
                });

            modelBuilder.Entity("VisaApplicationSysWeb.Models.BusinessVisaForm", b =>
                {
                    b.Property<int>("BusinessVisaFormId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BusinessVisaFormId"));

                    b.Property<int>("ApplicantID")
                        .HasColumnType("int");

                    b.Property<string>("BusinessNature")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("IntendedArrivalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("IntendedDepartureDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsVisaApplied")
                        .HasColumnType("bit");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassportNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassportPhotoPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Passportpath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VisaTypeId")
                        .HasColumnType("int");

                    b.HasKey("BusinessVisaFormId");

                    b.HasIndex("ApplicantID");

                    b.HasIndex("VisaTypeId");

                    b.ToTable("tblBusinessVisaForm");
                });

            modelBuilder.Entity("VisaApplicationSysWeb.Models.EmploymentVisaForm", b =>
                {
                    b.Property<int>("EmploymentVisaFormId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmploymentVisaFormId"));

                    b.Property<int>("ApplicantID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ContractEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ContractStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrentAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentEmployer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmploymentContractPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsVisaApplied")
                        .HasColumnType("bit");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MonthlySalary")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassportNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassportPhotoPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Passportpath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResumePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VisaTypeId")
                        .HasColumnType("int");

                    b.HasKey("EmploymentVisaFormId");

                    b.HasIndex("ApplicantID");

                    b.HasIndex("VisaTypeId");

                    b.ToTable("tblEmploymentVisaForm");
                });

            modelBuilder.Entity("VisaApplicationSysWeb.Models.StudentVisaForm", b =>
                {
                    b.Property<int>("StudentVisaFormId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentVisaFormId"));

                    b.Property<int>("ApplicantID")
                        .HasColumnType("int");

                    b.Property<string>("CourseTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpectedStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HighestEducationLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HighestEducationLevelMarkSheetPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstitutionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageTestScore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageTestTaken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassportNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassportPhotoPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Passportpath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProofOfFundsType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResumePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TestCardPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VisaTypeId")
                        .HasColumnType("int");

                    b.HasKey("StudentVisaFormId");

                    b.HasIndex("ApplicantID");

                    b.HasIndex("VisaTypeId");

                    b.ToTable("tblStudentVisaForm");
                });

            modelBuilder.Entity("VisaApplicationSysWeb.Models.TouristVisaForm", b =>
                {
                    b.Property<int>("TouristVisaFormId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TouristVisaFormId"));

                    b.Property<int>("ApplicantID")
                        .HasColumnType("int");

                    b.Property<string>("CurrentAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HotelReservationPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("IntendedArrivalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("IntendedDepartureDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsVisaApplied")
                        .HasColumnType("bit");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassportNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassportPhotoPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Passportpath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TravelItineraryPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VisaTypeId")
                        .HasColumnType("int");

                    b.HasKey("TouristVisaFormId");

                    b.HasIndex("ApplicantID");

                    b.HasIndex("VisaTypeId");

                    b.ToTable("tblTouristVisaForm");
                });

            modelBuilder.Entity("VisaApplicationSysWeb.Models.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConfirmPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblUser");
                });

            modelBuilder.Entity("VisaApplicationSysWeb.Models.VisaStatusModel", b =>
                {
                    b.Property<int>("VisaStatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisaStatusID"));

                    b.Property<int>("ApplicantID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisaSatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisaType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VisaStatusID");

                    b.HasIndex("ApplicantID");

                    b.ToTable("tblVisaStatus");
                });

            modelBuilder.Entity("VisaApplicationSysWeb.Models.VisaType", b =>
                {
                    b.Property<int>("VisaTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisaTypeId"));

                    b.Property<string>("TypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VisaTypeId");

                    b.ToTable("tblVisaType");
                });

            modelBuilder.Entity("VisaApplicationSysWeb.Models.BusinessVisaForm", b =>
                {
                    b.HasOne("VisaApplicationSysWeb.Models.Applicant", "tblApplicant")
                        .WithMany("BusinessVisaForms")
                        .HasForeignKey("ApplicantID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VisaApplicationSysWeb.Models.VisaType", null)
                        .WithMany("BusinessVisaForms")
                        .HasForeignKey("VisaTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tblApplicant");
                });

            modelBuilder.Entity("VisaApplicationSysWeb.Models.EmploymentVisaForm", b =>
                {
                    b.HasOne("VisaApplicationSysWeb.Models.Applicant", "tblApplicant")
                        .WithMany("EmploymentVisaForms")
                        .HasForeignKey("ApplicantID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VisaApplicationSysWeb.Models.VisaType", null)
                        .WithMany("EmploymentVisaForms")
                        .HasForeignKey("VisaTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tblApplicant");
                });

            modelBuilder.Entity("VisaApplicationSysWeb.Models.StudentVisaForm", b =>
                {
                    b.HasOne("VisaApplicationSysWeb.Models.Applicant", "Applicant")
                        .WithMany("tblStudentVisaForm")
                        .HasForeignKey("ApplicantID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VisaApplicationSysWeb.Models.VisaType", null)
                        .WithMany("StudentVisaForms")
                        .HasForeignKey("VisaTypeId");

                    b.Navigation("Applicant");
                });

            modelBuilder.Entity("VisaApplicationSysWeb.Models.TouristVisaForm", b =>
                {
                    b.HasOne("VisaApplicationSysWeb.Models.Applicant", "tblApplicant")
                        .WithMany("TouristVisaForms")
                        .HasForeignKey("ApplicantID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VisaApplicationSysWeb.Models.VisaType", null)
                        .WithMany("TouristVisaForms")
                        .HasForeignKey("VisaTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tblApplicant");
                });

            modelBuilder.Entity("VisaApplicationSysWeb.Models.VisaStatusModel", b =>
                {
                    b.HasOne("VisaApplicationSysWeb.Models.Applicant", "tblApplicant")
                        .WithMany("tblVisaStatus")
                        .HasForeignKey("ApplicantID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tblApplicant");
                });

            modelBuilder.Entity("VisaApplicationSysWeb.Models.Applicant", b =>
                {
                    b.Navigation("BusinessVisaForms");

                    b.Navigation("EmploymentVisaForms");

                    b.Navigation("TouristVisaForms");

                    b.Navigation("tblStudentVisaForm");

                    b.Navigation("tblVisaStatus");
                });

            modelBuilder.Entity("VisaApplicationSysWeb.Models.VisaType", b =>
                {
                    b.Navigation("BusinessVisaForms");

                    b.Navigation("EmploymentVisaForms");

                    b.Navigation("StudentVisaForms");

                    b.Navigation("TouristVisaForms");
                });
#pragma warning restore 612, 618
        }
    }
}
